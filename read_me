06/07/2023 :

---------------------------------------------

attention au del_one dans create expand l39. il ma pas posé de probleme
pour le moment, mais si yen a ca peut surement venir de lui
il est important faudra pas l'enlever mais le remettre dans une sortie d'erreur
propre pour check_env_expand

les 3lignes du dessous en commentaires a la fin, je vois pas la diff
avec et sans ducoup jles laisse en com pour l'instant aussi

---------------------------------------------

-verifier si ca pose probleme plus tard(les nodes vides)
de faire : $lol(var inexistante) :
    : Minishell > $lol $lol

Redirections[0]:

___________________

Command[0]:

char[0] : ||
char[1] : ||


 PS = cest la fonction presente dans get_expand l.83 
 qui creer cette node vide(au cas ou besoin de patch):
 	if (env == NULL)
		replace_false_expand_quote(end);

---------------------------------------------

Je viens de voir ca sur la page du projet :

Ne pas interpréter de quotes (guillemets) non fermés ou de 
caractères spéciaux non demandés dans le sujet, 
tels que \ (le backslash) ou ; (le point-virgule).

le probleme cest que j'ai implanté la gestion du \ (le backslash) et
ca marche vraiment niquel, a voir si il faut que je l'enleve
ou si on peut le laisser, cest quand meme stylé ce que ça gere^^

---------------------------------------------

dans unset verifier comment on le gere quand il est censé pas  avoir d'env
voir à l'exec : 

neyks in ~/Bureau/42/cercle_4/Minishell on alex λ env -i unset lol
env: «unset»: Aucun fichier ou dossier de ce type

---------------------------------------------

surement gerer le cas des variables 
en lecture seul dans le parsing de env, a voir

---------------------------------------------

Verifier la commande $< si on la parse comme il faut

---------------------------------------------


sur le builtin echo, redirigier le restult de printf avec dup2
builtin_cd

calculer le nbre d'args apres cd.

si args > 2			->	ft_printf_fd(STDERR, "cd: too many arguments\n");

si "cd" "ou cd ~"	->	target = HOME

si "cd -"			->	target = oldpwd

si non				->	target = args[1]

si target == NULL	->	return error

recup de pwd		->	chemin absolu du répertoire de travail actuel
pwd = getcwd(NULL, 0);

chdir de target		->	si error = ft_printf_fd(STDERR, "cd: %s: ", target); perror("");
pour changer de pwd

actualiser oldpwd	->	oldpwd = pwd

recup du new pwd	->	chemin absolu du nouveau répertoire de travail actuel
pwd = getcwd(NULL, 0);

actualiser pwd	->	pwd = pwd
	-> check si le chemin et good
	-> recup la node qui correspond
	-> changer l'ancien pwd par le nouveau pwd
	-> actualise env
